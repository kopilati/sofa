apiVersion: v1
kind: ConfigMap
metadata:
  name: dex-config
data:
  config.yaml: |-
    issuer: http://dex-service:5556/dex
    storage:
      type: memory
    web:
      http: 0.0.0.0:5556
    oauth2:
      skipApprovalScreen: true
    staticClients:
    - id: sofa-client
      redirectURIs:
      - 'http://localhost:8000/callback'
      name: 'Sofa Client'
      secret: sofa-client-secret
    staticPasswords:
    - email: "admin@example.com"
      password: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W" # bcrypt hash for: password
      userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
      username: "admin"
    enablePasswordDB: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dex
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dex
  template:
    metadata:
      labels:
        app: dex
    spec:
      containers:
      - name: dex
        image: dexidp/dex:v2.30.2
        command: [ "/usr/local/bin/dex", "serve", "/etc/dex/config.yaml" ]
        ports:
        - containerPort: 5556
        volumeMounts:
        - name: config
          mountPath: /etc/dex
      volumes:
      - name: config
        configMap:
          name: dex-config
---
apiVersion: v1
kind: Service
metadata:
  name: dex-service
spec:
  selector:
    app: dex
  ports:
  - port: 5556
    targetPort: 5556
---
# For easy testing, we'll expose Dex outside the cluster
apiVersion: v1
kind: Service
metadata:
  name: dex-nodeport
spec:
  type: NodePort
  selector:
    app: dex
  ports:
  - port: 5556
    targetPort: 5556
    nodePort: 30556
